
yrgo.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000210  2**0
                  ALLOC, LOAD, DATA
  1 .text         00000080  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000002f  00000000  00000000  00000210  2**0
                  CONTENTS, READONLY
  3 .stack.descriptors.hdr 0000000e  00000000  00000000  0000023f  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000110  00000000  00000000  0000024d  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001187  00000000  00000000  0000035d  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000735  00000000  00000000  000014e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000608  00000000  00000000  00001c19  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000001e8  00000000  00000000  00002224  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000002ea  00000000  00000000  0000240c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000017f  00000000  00000000  000026f6  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000f0  00000000  00000000  00002875  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .text         00000004  0000018e  0000018e  00000202  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002968  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .text.main    00000072  00000080  00000080  000000f4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.setup_p0 00000008  00000126  00000126  0000019a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.wait    0000001e  000000f2  000000f2  00000166  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.digital_out_2_on 00000008  0000012e  0000012e  000001a2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.digital_out_3_on 00000008  00000136  00000136  000001aa  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.digital_out_11_on 00000008  0000013e  0000013e  000001b2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .text.digital_out_12_on 00000008  00000146  00000146  000001ba  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .text.digital_out_13_on 00000008  0000014e  0000014e  000001c2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 .text.digital_out_2_off 00000008  00000156  00000156  000001ca  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 .text.digital_out_3_off 00000008  0000015e  0000015e  000001d2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 .text.digital_out_4_off 00000008  00000166  00000166  000001da  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 .text.digital_out_5_off 00000008  0000016e  0000016e  000001e2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 26 .text.digital_out_11_off 00000008  00000176  00000176  000001ea  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 27 .text.digital_out_12_off 00000008  0000017e  0000017e  000001f2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 .text.digital_out_13_off 00000008  00000186  00000186  000001fa  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 29 .text.__dummy_fini 00000002  00000196  00000196  0000020a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 30 .text.__dummy_funcs_on_exit 00000002  00000198  00000198  0000020c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 31 .text.__dummy_simulator_exit 00000002  0000019a  0000019a  0000020e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 32 .text.exit    00000016  00000110  00000110  00000184  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 33 .text._Exit   00000004  00000192  00000192  00000206  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
   8:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
   c:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
  10:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
  14:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
  18:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
  1c:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
  20:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
  24:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
  28:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
  2c:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
  30:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
  34:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
  38:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
  3c:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
  40:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
  44:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
  48:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
  4c:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
  50:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
  54:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
  58:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
  5c:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
  60:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>
  64:	0c 94 c7 00 	jmp	0x18e	; 0x18e <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 40 00 	call	0x80	; 0x80 <_etext>
  78:	0c 94 88 00 	jmp	0x110	; 0x110 <exit>

0000007c <_exit>:
  7c:	f8 94       	cli

0000007e <__stop_program>:
  7e:	ff cf       	rjmp	.-2      	; 0x7e <__stop_program>

Disassembly of section .text:

0000018e <__bad_interrupt>:
 18e:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.main:

00000080 <main>:
#include <stdbool.h>
#include <stdio.h>

int main(void)
{
    setup_p0();
  80:	0e 94 93 00 	call	0x126	; 0x126 <setup_p0>
   
   */
   
   while(1){
        // 1
        digital_out_11_off();
  84:	0e 94 bb 00 	call	0x176	; 0x176 <digital_out_11_off>
        digital_out_12_on();
  88:	0e 94 a3 00 	call	0x146	; 0x146 <digital_out_12_on>
        digital_out_13_on();
  8c:	0e 94 a7 00 	call	0x14e	; 0x14e <digital_out_13_on>
        digital_out_2_on();
  90:	0e 94 97 00 	call	0x12e	; 0x12e <digital_out_2_on>
        digital_out_3_off();
  94:	0e 94 af 00 	call	0x15e	; 0x15e <digital_out_3_off>
        digital_out_4_off();
  98:	0e 94 b3 00 	call	0x166	; 0x166 <digital_out_4_off>
        digital_out_5_off();
  9c:	0e 94 b7 00 	call	0x16e	; 0x16e <digital_out_5_off>
        wait(6);
  a0:	86 e0       	ldi	r24, 0x06	; 6
  a2:	90 e0       	ldi	r25, 0x00	; 0
  a4:	0e 94 79 00 	call	0xf2	; 0xf2 <wait>
        // 2
        digital_out_11_on();
  a8:	0e 94 9f 00 	call	0x13e	; 0x13e <digital_out_11_on>
        digital_out_12_off();
  ac:	0e 94 bf 00 	call	0x17e	; 0x17e <digital_out_12_off>
        digital_out_13_on();
  b0:	0e 94 a7 00 	call	0x14e	; 0x14e <digital_out_13_on>
        digital_out_2_off();
  b4:	0e 94 ab 00 	call	0x156	; 0x156 <digital_out_2_off>
        digital_out_3_on();
  b8:	0e 94 9b 00 	call	0x136	; 0x136 <digital_out_3_on>
        digital_out_4_off();
  bc:	0e 94 b3 00 	call	0x166	; 0x166 <digital_out_4_off>
        digital_out_5_off();
  c0:	0e 94 b7 00 	call	0x16e	; 0x16e <digital_out_5_off>
        wait(6);
  c4:	86 e0       	ldi	r24, 0x06	; 6
  c6:	90 e0       	ldi	r25, 0x00	; 0
  c8:	0e 94 79 00 	call	0xf2	; 0xf2 <wait>
        // 3
        digital_out_11_on();
  cc:	0e 94 9f 00 	call	0x13e	; 0x13e <digital_out_11_on>
        digital_out_12_on();
  d0:	0e 94 a3 00 	call	0x146	; 0x146 <digital_out_12_on>
        digital_out_13_off();
  d4:	0e 94 c3 00 	call	0x186	; 0x186 <digital_out_13_off>
        digital_out_2_on();
  d8:	0e 94 97 00 	call	0x12e	; 0x12e <digital_out_2_on>
        digital_out_3_on();
  dc:	0e 94 9b 00 	call	0x136	; 0x136 <digital_out_3_on>
        digital_out_4_off();
  e0:	0e 94 b3 00 	call	0x166	; 0x166 <digital_out_4_off>
        digital_out_5_off();
  e4:	0e 94 b7 00 	call	0x16e	; 0x16e <digital_out_5_off>
        wait(6);
  e8:	86 e0       	ldi	r24, 0x06	; 6
  ea:	90 e0       	ldi	r25, 0x00	; 0
  ec:	0e 94 79 00 	call	0xf2	; 0xf2 <wait>
  f0:	c9 cf       	rjmp	.-110    	; 0x84 <main+0x4>

Disassembly of section .text.setup_p0:

00000126 <setup_p0>:
}
void digital_out_9_off(void) {
    PORTB &= ~(1 << DIGITAL_OUT_9);
}
void digital_out_10_off(void) {
    PORTB &= ~(1 << DIGITAL_OUT_10);
 126:	8f ef       	ldi	r24, 0xFF	; 255
 128:	8a b9       	out	0x0a, r24	; 10
 12a:	84 b9       	out	0x04, r24	; 4
 12c:	08 95       	ret

Disassembly of section .text.wait:

000000f2 <wait>:
  f2:	20 e0       	ldi	r18, 0x00	; 0
  f4:	30 e0       	ldi	r19, 0x00	; 0
  f6:	08 c0       	rjmp	.+16     	; 0x108 <wait+0x16>
  f8:	ef e9       	ldi	r30, 0x9F	; 159
  fa:	ff e0       	ldi	r31, 0x0F	; 15
  fc:	31 97       	sbiw	r30, 0x01	; 1
  fe:	f1 f7       	brne	.-4      	; 0xfc <wait+0xa>
 100:	00 c0       	rjmp	.+0      	; 0x102 <wait+0x10>
 102:	00 00       	nop
 104:	2f 5f       	subi	r18, 0xFF	; 255
 106:	3f 4f       	sbci	r19, 0xFF	; 255
 108:	28 17       	cp	r18, r24
 10a:	39 07       	cpc	r19, r25
 10c:	a8 f3       	brcs	.-22     	; 0xf8 <wait+0x6>
 10e:	08 95       	ret

Disassembly of section .text.digital_out_2_on:

0000012e <digital_out_2_on>:
 12e:	8b b1       	in	r24, 0x0b	; 11
 130:	84 60       	ori	r24, 0x04	; 4
 132:	8b b9       	out	0x0b, r24	; 11
 134:	08 95       	ret

Disassembly of section .text.digital_out_3_on:

00000136 <digital_out_3_on>:
 136:	8b b1       	in	r24, 0x0b	; 11
 138:	88 60       	ori	r24, 0x08	; 8
 13a:	8b b9       	out	0x0b, r24	; 11
 13c:	08 95       	ret

Disassembly of section .text.digital_out_11_on:

0000013e <digital_out_11_on>:
 13e:	85 b1       	in	r24, 0x05	; 5
 140:	88 60       	ori	r24, 0x08	; 8
 142:	85 b9       	out	0x05, r24	; 5
 144:	08 95       	ret

Disassembly of section .text.digital_out_12_on:

00000146 <digital_out_12_on>:
 146:	85 b1       	in	r24, 0x05	; 5
 148:	80 61       	ori	r24, 0x10	; 16
 14a:	85 b9       	out	0x05, r24	; 5
 14c:	08 95       	ret

Disassembly of section .text.digital_out_13_on:

0000014e <digital_out_13_on>:
 14e:	85 b1       	in	r24, 0x05	; 5
 150:	80 62       	ori	r24, 0x20	; 32
 152:	85 b9       	out	0x05, r24	; 5
 154:	08 95       	ret

Disassembly of section .text.digital_out_2_off:

00000156 <digital_out_2_off>:
 156:	8b b1       	in	r24, 0x0b	; 11
 158:	8b 7f       	andi	r24, 0xFB	; 251
 15a:	8b b9       	out	0x0b, r24	; 11
 15c:	08 95       	ret

Disassembly of section .text.digital_out_3_off:

0000015e <digital_out_3_off>:
 15e:	8b b1       	in	r24, 0x0b	; 11
 160:	87 7f       	andi	r24, 0xF7	; 247
 162:	8b b9       	out	0x0b, r24	; 11
 164:	08 95       	ret

Disassembly of section .text.digital_out_4_off:

00000166 <digital_out_4_off>:
 166:	8b b1       	in	r24, 0x0b	; 11
 168:	8f 7e       	andi	r24, 0xEF	; 239
 16a:	8b b9       	out	0x0b, r24	; 11
 16c:	08 95       	ret

Disassembly of section .text.digital_out_5_off:

0000016e <digital_out_5_off>:
 16e:	8b b1       	in	r24, 0x0b	; 11
 170:	8f 7d       	andi	r24, 0xDF	; 223
 172:	8b b9       	out	0x0b, r24	; 11
 174:	08 95       	ret

Disassembly of section .text.digital_out_11_off:

00000176 <digital_out_11_off>:
}
void digital_out_11_off(void) {
    PORTB &= ~(1 << DIGITAL_OUT_11);
 176:	85 b1       	in	r24, 0x05	; 5
 178:	87 7f       	andi	r24, 0xF7	; 247
 17a:	85 b9       	out	0x05, r24	; 5
 17c:	08 95       	ret

Disassembly of section .text.digital_out_12_off:

0000017e <digital_out_12_off>:
}
void digital_out_12_off(void) {
    PORTB &= ~(1 << DIGITAL_OUT_12);
 17e:	85 b1       	in	r24, 0x05	; 5
 180:	8f 7e       	andi	r24, 0xEF	; 239
 182:	85 b9       	out	0x05, r24	; 5
 184:	08 95       	ret

Disassembly of section .text.digital_out_13_off:

00000186 <digital_out_13_off>:
}
void digital_out_13_off(void) {
    PORTB &= ~(1 << DIGITAL_OUT_13);
 186:	85 b1       	in	r24, 0x05	; 5
 188:	8f 7d       	andi	r24, 0xDF	; 223
 18a:	85 b9       	out	0x05, r24	; 5
 18c:	08 95       	ret

Disassembly of section .text.__dummy_fini:

00000196 <_fini>:
 196:	08 95       	ret

Disassembly of section .text.__dummy_funcs_on_exit:

00000198 <__funcs_on_exit>:
 198:	08 95       	ret

Disassembly of section .text.__dummy_simulator_exit:

0000019a <__simulator_exit>:
 19a:	08 95       	ret

Disassembly of section .text.exit:

00000110 <exit>:
 110:	ec 01       	movw	r28, r24
 112:	0e 94 cc 00 	call	0x198	; 0x198 <__funcs_on_exit>
 116:	0e 94 cb 00 	call	0x196	; 0x196 <_fini>
 11a:	ce 01       	movw	r24, r28
 11c:	0e 94 cd 00 	call	0x19a	; 0x19a <__simulator_exit>
 120:	ce 01       	movw	r24, r28
 122:	0e 94 c9 00 	call	0x192	; 0x192 <_Exit>

Disassembly of section .text._Exit:

00000192 <_Exit>:
 192:	0e 94 3e 00 	call	0x7c	; 0x7c <_exit>
